{"version":3,"sources":["logo.svg","AddItemLabelMenu/Menu.jsx","actions.js","AddItemLabelMenu/index.js","ShoppingListItem/index.jsx","FilterPanel/SearchInput.jsx","FilterPanel/Panel.jsx","FilterPanel/index.js","ShoppingList/AddItemForm.jsx","ShoppingList/ItemMenu.jsx","SortingPanel/Panel.jsx","SortingPanel/index.jsx","ShoppingList/List.jsx","reducers/itemOrders.js","reducers/items.js","reducers/sortBy.js","reducers/filters.js","reducers/labels.js","reducers/itemsLabels.js","reducers/index.js","ShoppingList/index.js","store/initialState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LabelsMenu","props","menu","react_default","a","createElement","es_menu","onClick","e","addItemLabel","itemId","key","labels","map","label","Item","id","row","col","span","lib","name","style","color","dropdown","overlay","className","href","changeSortBy","columnName","direction","type","payload","connect","state","ownProps","dispatch","labelId","Menu","StyledListItem","styled","List","_templateObject","ShoppingListItem","qty","isRead","AddItemLabelMenu","SearchInput","onChange","input","Search","placeholder","onSearch","enterButton","FilterPanel","setFilter","unsetFilter","FilterPanel_SearchInput","filterName","value","es_radio","Group","defaultValue","buttonStyle","target","Button","Object","objectSpread","sortBy","filterValue","console","log","Panel","FormItem","Form","HorizontalLoginForm","handleSubmit","preventDefault","_this","form","validateFields","err","values","Date","getTime","this","fieldsError","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","nameError","qtyError","es_form","layout","onSubmit","validateStatus","help","rules","required","message","es_button","htmlType","disabled","keys","some","field","React","Component","WrappedHorizontalLoginForm","create","ItemMenu","deleteHandle","markAsReadHandle","SortingPanel","margin-top","clickHandle","padding-right","stateProps","dispatchProps","currentColumnName","currentDirection","ShoppingList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDragEnd","result","newOrder","destination","index","draggableId","unsetSortBy","changeOrder","handleAddFormSubmit","item","addItem","setState","addFormVisible","deleteItem","confirm","markAsReadItem","items","nextProps","context","onOk","Modal","title","content","okText","cancelText","_this2","react_beautiful_dnd_esm","droppableId","provided","snapshot","assign","droppableProps","ref","innerRef","list","header","src_FilterPanel","src_SortingPanel","footer","offset","popover","AddItemForm","handleCancel","trigger","visible","block","bordered","dataSource","renderItem","ShoppingList_ItemMenu","draggableProps","dragHandleProps","src_ShoppingListItem","itemOrders","arguments","length","undefined","action","maxOrder","Math","max","apply","itemOrder","order","toConsumableArray","concat","filter","oldOrder","find","newState","reducers_items","SortBy","filters","_action$payload","defineProperty","itemLabels","reducers","combineReducers","getItems","mainState","filteredItems","hasOwnProperty","slice","indexOf","sort","b","fromItems","res","sortedItemOrders","_loop","getSortedItems","itemLabel","chageOrder","ShoppingListComponent","initialState","store","createStore","rootReducer","App","es","src_ShoppingList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6RCiDzBC,EA7CI,SAACC,GAChB,IAAMC,EACFC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,QACI,SAACC,GACGP,EAAMQ,aAAaR,EAAMS,OAAQF,EAAEG,OAG1CV,EAAMW,OAAOC,IACV,SAACC,GAAD,OACIX,EAAAC,EAAAC,cAACC,EAAA,EAAKS,KAAN,CAAWJ,IAAKG,EAAME,IAClBb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACId,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACPhB,EAAAC,EAAAC,cAACe,EAAA,KAAD,CACIC,KAAK,MACLC,MACI,CACIC,MAAST,EAAMS,UAM/BpB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,IACNL,EAAMO,WAcnC,OAAQlB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUC,QAASvB,GACvBC,EAAAC,EAAAC,cAAA,KAAGqB,UAAU,oBAAoBC,KAAK,KAAtC,OACQxB,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,KAAK,kBCjBdO,EAAe,SAACC,EAAWC,GACpC,MAAQ,CAAEC,KAAM,iBAAiBC,QAAQ,CAACH,aAAWC,eCN1CG,cAdS,SAACC,EAAOC,GAC5B,MAAO,CACHvB,OAAOsB,EAAMtB,SAKM,SAACwB,GAAD,MACvB,CACI3B,aAAa,SAACC,EAAO2B,GAAR,OAAkBD,ED0BX,SAAC1B,EAAO2B,GAChC,MAAQ,CAACN,KAAK,iBAAiBC,QAAQ,CAACtB,SAAO2B,YC3BH5B,CAAaC,EAAO2B,OAKrDJ,CAGbK,kNCnBF,IAAMC,EAAiBC,YAAOC,IAAK1B,KAAZyB,CAAHE,KAqCLC,EA9BU,SAAC1C,GAItB,OACIE,EAAAC,EAAAC,cAACkC,EAAD,KAEIpC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACNlB,EAAMoB,KADX,MAIAlB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACNlB,EAAM2C,KAGXzC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACNlB,EAAM4C,OAAS,SAAW,MAG/B1C,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACNlB,EAAMW,OAAOC,IAAI,SAAAC,GAAK,OACnBX,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,KAAK,MAAMC,MAAO,CAAEC,MAAST,EAAMS,SAAiBT,EAAMO,QAEzElB,EAAAC,EAAAC,cAACyC,EAAD,CAAkBpC,OAAQT,EAAMe,0CCrBjC+B,EAZK,SAAS9C,GAAM,IACxB+C,EAAY/C,EAAZ+C,SAEP,OAAQ7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAMC,OAAP,CACJC,YAAY,oBAEZC,SAAUJ,EACVK,aAAW,KC6BJC,EAnCK,SAACrD,GAAU,IACpBsD,EAAyBtD,EAAzBsD,UAAUC,EAAevD,EAAfuD,YACjB,OACIrD,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACId,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,KAAM,GACRhB,EAAAC,EAAAC,cAACoD,EAAD,CAAaC,WAAW,OAAOV,SAAU,SAACW,GAAD,OAAWJ,EAAU,OAAQI,OAG1ExD,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACPhB,EAAAC,EAAAC,cAACuD,EAAA,EAAMC,MAAP,CACIC,aAAa,MACbC,YAAY,QACZf,SAAU,SAACxC,GAEP,OAAOA,EAAEwD,OAAOL,OACZ,IAAK,MACD,OAAOH,EAAY,UACvB,IAAK,OACD,OAAOD,EAAU,UAAS,GAC9B,IAAK,eACD,OAAOA,EAAU,UAAS,GAC9B,QACI,UAGZpD,EAAAC,EAAAC,cAACuD,EAAA,EAAMK,OAAP,CAAcN,MAAM,OAApB,OACAxD,EAAAC,EAAAC,cAACuD,EAAA,EAAMK,OAAP,CAAcN,MAAM,QAApB,QACAxD,EAAAC,EAAAC,cAACuD,EAAA,EAAMK,OAAP,CAAcN,MAAM,gBAApB,oBCPL1B,cAjBS,SAACC,EAAOC,GAC5B,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GACAhC,EAAMkC,SAIU,SAAChC,GAAD,MACvB,CACImB,UAAU,SAACG,EAAWW,GAElB,OADAC,QAAQC,IAAI,kBAAkBb,EAAWW,GACjCjC,ELkBK,SAACsB,EAAWW,GAEjC,MAAQ,CAACtC,KAAK,aAAaC,QAAQ,CAAC0B,WAAaA,EAAWW,YAAcA,IKpBjDd,CAAUG,EAAWW,KAE1Cb,YAAY,SAACE,GAAD,OAActB,ELoBP,SAACsB,EAAWW,GACnC,MAAQ,CAACtC,KAAK,eAAeC,QAAQ,CAAC0B,WAAaA,IKrBZF,CAAYE,OAKxCzB,CAIbuC,YCzBIC,EAAWC,IAAK3D,SAMhB4D,6MAOFC,aAAe,SAACpE,GACZA,EAAEqE,iBACFC,EAAK7E,MAAM8E,KAAKC,eAAe,SAACC,EAAKC,GACjC,IAAKD,EAAK,CAEN,IAAMjE,GAAG,IAAImE,MAAOC,UACpBN,EAAK7E,MAAM2E,aAAXV,OAAAC,EAAA,EAAAD,CAAA,CAAyBlD,MAAMkE,2FATvCG,KAAKpF,MAAM8E,KAAKC,kDAeX,IAvBMM,EAuBNC,EAGDF,KAAKpF,MAAM8E,KADXS,EAFCD,EAEDC,kBAAmBC,EAFlBF,EAEkBE,eAAgBC,EAFlCH,EAEkCG,cAAeC,EAFjDJ,EAEiDI,eAIhDC,EAAYD,EAAe,SAAWD,EAAc,QACpDG,EAAWF,EAAe,QAAUD,EAAc,OACxD,OACIvF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAMC,OAAO,SAASC,SAAUX,KAAKT,cACjCzE,EAAAC,EAAAC,cAACoE,EAAD,CACIwB,eAAgBL,EAAY,QAAU,GACtCM,KAAMN,GAAa,IAElBJ,EAAkB,OAAQ,CACvBW,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,uBADtCb,CAGGrF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASE,YAAY,WAG7BhD,EAAAC,EAAAC,cAACoE,EAAD,CACIwB,eAAgBJ,EAAW,QAAU,GACrCK,KAAML,GAAY,IAEjBL,EAAkB,MAAO,CACtBW,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,uBADtCb,CAGGrF,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAASE,YAAY,UAG7BhD,EAAAC,EAAAC,cAACoE,EAAD,KACItE,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACIvE,KAAK,UACLwE,SAAS,SACTC,UAzDLlB,EAyDyBG,IAxDjCvB,OAAOuC,KAAKnB,GAAaoB,KAAK,SAAAC,GAAK,OAAIrB,EAAYqB,OAqD1C,gBAlDcC,IAAMC,WAiEzBC,EAFoBpC,IAAKqC,QAALrC,CAAcC,GCnD1BqC,EAlBL,SAAC/G,GAAD,OACdE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,QAAS,SAACC,GAEQ,WAAVA,EAAEG,KACDV,EAAMgH,eAGE,aAAVzG,EAAEG,KACAV,EAAMiH,qBAIf/G,EAAAC,EAAAC,cAACC,EAAA,EAAKS,KAAN,CAAWJ,IAAI,YAAf,gBACAR,EAAAC,EAAAC,cAACC,EAAA,EAAKS,KAAN,CAAWJ,IAAI,UAAf,YC+BOwG,EA5CM,SAAClH,GAElB,OACIE,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACIK,MAAO,CACH8F,aAAa,SAGjBjH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,EAAGZ,QAAS,WAAQN,EAAMoH,YAAY,UAE7ClH,EAAAC,EAAAC,cAAA,KACIiB,MACI,CACIgG,gBAAiB,SAH7B,QAQAnH,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,KAAK,UAGflB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,EAAGZ,QAAS,kBAAMN,EAAMoH,YAAY,SAC3ClH,EAAAC,EAAAC,cAAA,KACIiB,MACI,CACIgG,gBAAiB,SAH7B,OAQAnH,EAAAC,EAAAC,cAACe,EAAA,KAAD,CAAMC,KAAK,UAGflB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACPhB,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,GACPhB,EAAAC,EAAAC,cAAA,sBCVD4B,cAzBS,SAACC,EAAOC,GAG5B,OAAO+B,OAAAC,EAAA,EAAAD,CAAA,GACAhC,EAAMkC,SAuBb,KAnBe,SAACmD,EAAWC,GACmBD,EAAvCE,kBAAuCF,EAArBG,iBADoB,IAEtCtF,EAAYoF,EAAZpF,SACP,MAAO,CACHiF,YAAa,SAACxF,GAEP0F,EAAW1F,YAAYA,EAEtBO,EAASR,EAAaC,EAAmC,QAAvB0F,EAAWzF,UAAmB,OAAO,QAEvEM,EAASR,EAAaC,EAAW,WAOlCI,CAIbkF,GCiJaQ,cA1KX,SAAAA,EAAY1H,GAAO,IAAA6E,EAAAZ,OAAA0D,EAAA,EAAA1D,CAAAmB,KAAAsC,IAEf7C,EAAAZ,OAAA2D,EAAA,EAAA3D,CAAAmB,KAAAnB,OAAA4D,EAAA,EAAA5D,CAAAyD,GAAAI,KAAA1C,KAAMpF,KAcV+H,UAAY,SAAAC,GAER,IAAMC,EAAWD,EAAOE,YAAYC,MAC9BpH,EAAKiH,EAAOI,YAClBvD,EAAK7E,MAAMqI,cACXxD,EAAK7E,MAAMsI,YAAYvH,EAAIkH,IArBZpD,EA4BnB0D,oBAAoB,SAACC,GACjB3D,EAAK7E,MAAMyI,QAAQD,GACnB3D,EAAK6D,SAAS,CAACC,gBAAe,KA9Bf9D,EA4CnB+D,WAAa,SAACnI,GACVoE,EAAKgE,QACD,oCACA,kBAAIhE,EAAK7E,MAAM4I,WAAWnI,MA/CfoE,EAmDnBiE,eAAiB,SAACrI,GACdoE,EAAKgE,QACD,0CACA,kBAAIhE,EAAK7E,MAAM8I,eAAerI,MAnDhBT,EAAV+I,MAHO,OAIflE,EAAK5C,MAAQ,CACT8G,MAAO/I,EAAM+I,MACbtF,WAAY,GACZkF,gBAAgB,GAPL9D,yFAYOmE,GACtB5D,KAAKsD,SAAS,CAAEK,MAAOC,EAAUD,wCAoB5BE,EAAQC,GACbC,IAAMN,QAAQ,CACZO,MAAO,KACPC,QAASJ,EACTK,OAAQ,KACRC,WAAY,SACZL,KAAKA,qCAmBF,IAAAM,EAAApE,KAEC2D,EAAQ3D,KAAKnD,MAAM8G,MAEzB,OACI7I,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CACI1B,UAAW3C,KAAK2C,WAEhB7H,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAWC,YAAY,cAAc5H,KAAK,UAElC,SAAC6H,EAAUC,GACP,OACI1J,EAAAC,EAAAC,cAAA,MAAA6D,OAAA4F,OAAA,GACQF,EAASG,eADjB,CAEIC,IAAKJ,EAASK,WAEd9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CACIC,OACIhK,EAAAC,EAAAC,cAAA,WAESF,EAAAC,EAAAC,cAAC+J,EAAD,MAGAjK,EAAAC,EAAAC,cAACgK,EAAD,OAObC,OACInK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACId,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAKC,KAAM,EAAGoJ,OAAQ,GAClBpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CACIlB,QACInJ,EAAAC,EAAAC,cAACoK,EAAD,CACI7F,aAAc6E,EAAKjB,oBACnBkC,aAAc,kBAAIjB,EAAKd,SAAS,CAACC,gBAAe,OAGxDS,MAAM,eACNsB,QAAQ,QACRC,QAASnB,EAAKvH,MAAM0G,gBAGpBzI,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CACIuE,OAAK,EACLtK,QAAS,kBAAIkJ,EAAKd,SAAS,CAACC,gBAAe,KAC3CpC,SAAUiD,EAAKvH,MAAM0G,gBAHzB,WAYhBkC,UAAU,EACVC,WAAY/B,EACZgC,WAAY,SAACvC,EAAML,GAEf,OAEIjI,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAYrB,YAAaI,EAAKzH,GAAIoH,MAAOA,GAEjC,SAACwB,EAAUC,GAAX,OACI1J,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIC,QACItB,EAAAC,EAAAC,cAAC4K,EAAD,CACIhE,aAAe,kBAAIwC,EAAKZ,WAAWJ,EAAKzH,KACxCkG,iBAAmB,kBAAIuC,EAAKV,eAAeN,EAAKzH,OAGxD2J,QAAS,CAAC,gBAEdxK,EAAAC,EAAAC,cAAA,MAAA6D,OAAA4F,OAAA,CAEIE,IAAKJ,EAASK,UACVL,EAASsB,eACTtB,EAASuB,iBAGThL,EAAAC,EAAAC,cAAC+K,EAADlH,OAAA4F,OAAA,CACInJ,IAAK8H,EAAKzH,IACNyH,UAanCmB,EAASzG,wBA7JvByD,IAAMC,mBC4BlBwE,EAnCI,WAAwB,IAAvBnJ,EAAuBoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEvC,OAAQC,EAAO1J,MACX,IAAK,iBACD,IAAM2J,EAAWC,KAAKC,IAAIC,MAAMF,KAAMzJ,EAAMrB,IAAI,SAAUiL,GAAa,OAAOA,EAAUC,SACxF,OAAO7H,OAAA8H,EAAA,EAAA9H,CAAIhC,GAAX+J,OAAA,CAAkB,CAAEvL,OAAQ+K,EAAOzJ,QAAQtB,OAAQqL,MAAOL,EAAW,KACzE,IAAK,oBACD,OAAOxJ,EAAMgK,OAAO,SAACJ,GAAD,OAAgBA,EAAUpL,SAAW+K,EAAOzJ,QAAQtB,SAC5E,IAAK,eACD,IAAMyL,EAAWjK,EAAMkK,KAAK,SAACN,GAAD,OAAgBA,EAAUpL,SAAW+K,EAAOzJ,QAAQhB,KAAK+K,MAC/E7D,EAAWuD,EAAOzJ,QAAQ+J,MAChC,GAAI7D,EAAWiE,EAAU,CACrB,IAAME,EAAWnK,EAAMrB,IAAI,SAAUiL,GAIjC,OAHIA,EAAUC,OAAS7D,GAAY4D,EAAUC,MAAQI,IACjDL,EAAUC,MAAQD,EAAUC,MAAQ,GAEjCD,IAGX,OADAO,EAASD,KAAK,SAACN,GAAD,OAAeA,EAAUpL,QAAU+K,EAAOzJ,QAAQhB,KAAI+K,MAAQ7D,EACrEmE,EAEP,IAAMA,EAAWnK,EAAMrB,IAAI,SAAUiL,GAIjC,OAHIA,EAAUC,OAAS7D,GAAY4D,EAAUC,MAAQI,IACjDL,EAAUC,MAAQD,EAAUC,MAAQ,GAEjCD,IAGX,OADAO,EAASD,KAAK,SAACN,GAAD,OAAeA,EAAUpL,QAAU+K,EAAOzJ,QAAQhB,KAAI+K,MAAQ7D,EACrEmE,EAGf,QACI,OAAOnK,ICfnBoK,EApBc,WAAwB,IAAvBpK,EAAuBoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClC,OAAQC,EAAO1J,MACX,IAAK,WACD,OAAOmC,OAAA8H,EAAA,EAAA9H,CAAIhC,GAAX+J,OAAA,CAAkBR,EAAOzJ,UAC7B,IAAK,cACD,OAAOE,EAAMgK,OAAO,SAACzD,GAAD,OAAWA,EAAKzH,KAAOyK,EAAOzJ,QAAQhB,KAC9D,IAAK,oBACD,OAAOkB,EAAMrB,IAAI,SAAU4H,GAIvB,OAHIA,EAAKzH,IAAMyK,EAAOzJ,QAAQhB,KAC1ByH,EAAK5F,QAAS,GAEX4F,IAEf,QACI,OAAOvG,EAGf,OAAOA,GCNIqK,EAXA,WAAwB,IAAvBrK,EAAuBoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEnC,OAAQC,EAAO1J,MACX,IAAK,iBACD,OAAOmC,OAAO4F,OAAO,GAAI5H,EAAO,CAAEL,WAAY4J,EAAOzJ,QAAQH,WAAYC,UAAW2J,EAAOzJ,QAAQF,YACvG,IAAK,gBACD,OAAOoC,OAAO4F,OAAO,GAAI5H,EAAO,CAAEL,WAAY,KAAMC,UAAW,OACnE,QACI,OAAOI,YCMJsK,EAbC,WAAwB,IAAvBtK,EAAuBoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAO1J,MACX,IAAK,aAAL,IAAA0K,EACwChB,EAAOzJ,QAAnC0B,EADZ+I,EACY/I,WAAYW,EADxBoI,EACwBpI,YACpB,OAAOH,OAAO4F,OAAO,GAAI5H,EAAlBgC,OAAAwI,EAAA,EAAAxI,CAAA,GAA4BR,EAAaW,IACpD,IAAK,eACD,OAAOH,OAAO4F,OAAO,GAAI5H,EAAlBgC,OAAAwI,EAAA,EAAAxI,CAAA,GAA4BuH,EAAOzJ,QAAQ0B,WAAa,OACnE,QACI,OAAOxB,EAEf,OAAOA,GCJItB,EAPA,WAAwB,IAAvBsB,EAAuBoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAGZ,OAH2BA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACpBzJ,KAEAG,GCQJyK,EAXI,WAAwB,IAAvBzK,EAAuBoJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvC,OAAQC,EAAO1J,MACX,IAAK,iBACD,OAAOmC,OAAA8H,EAAA,EAAA9H,CAAIhC,GAAX+J,OAAA,CAAA/H,OAAAC,EAAA,EAAAD,CAAA,CACElD,IAAI,IAAImE,MAAOC,WAAcqG,EAAOzJ,WAE1C,QACI,OAAOE,ICEnB0K,GAAeC,WAAf,CAA+B,CAC5B7D,QAAOqC,aAAYjH,SAAQoI,UAAS5L,SAAQ+L,eAelCG,GAAW,SAAC5K,GAEtB,IAAM6K,EAAY7K,EAYlB,OA1B2B,SAACA,GAC5B,IL8ByB8G,EAAOwD,EK9B1BQ,GL8BmBhE,EK9BmB9G,EAAM8G,OL8BlBwD,EK9ByBtK,EAAMsK,SLgClDS,eAAe,SAA4B,OAAjBT,EAAQnL,OAC1C2H,EAAQA,EAAMkE,QAAQhB,OAAO,SAAAzD,GAAI,OAAIA,EAAKpH,KAAK8L,QAAQX,EAAQnL,OAAS,KAGxEmL,EAAQS,eAAe,WAAgC,OAAnBT,EAAQ3J,SAC5CmG,EAAQA,EAAMkE,QAAQhB,OAAO,SAAAzD,GAAI,OAAIA,EAAK5F,SAAW2J,EAAQ3J,UAG1DmG,GKvCR,GAAgC,OAA5B9G,EAAMkC,OAAOvC,WACd,OLyC8B,SAACmH,EAAOnH,EAAYC,GAgBpD,OAdekH,EAAMkE,QAAQE,KAAK,SAAChN,EAAGiN,GAClC,OAAIjN,EAAEyB,KAAgBwL,EAAExL,GACb,EAGPzB,EAAEyB,GAAcwL,EAAExL,GACI,QAAdC,GAAwB,EAAI,EAEpC1B,EAAEyB,GAAcwL,EAAExL,GACI,QAAdC,EAAuB,GAAK,OADxC,IKnDKwL,CAA+BN,EAAe9K,EAAMkC,OAAOvC,WAAYK,EAAMkC,OAAOtC,WAE9F,IAAMuJ,EAAanJ,EAAMmJ,WAAWa,OAAO,SAACJ,GAAD,OAAekB,EAAcZ,KAAK,SAAC3D,GAAD,OAAUA,EAAKzH,KAAO8K,EAAUpL,WAC7G,OLG8B,SAACsI,EAAOqC,GAErC,IAAMkC,EAAM,GACNC,EAAmBnC,EAAW6B,QAAQE,KAAK,SAAChN,EAAGiN,GACjD,OAAIjN,EAAE2L,MAAQsB,EAAEtB,OACJ,EAER3L,EAAE2L,MAAQsB,EAAEtB,MACL,EAEJ,IAVyC0B,EAAA,SAa3CrF,GACL,IAAM0D,EAAY0B,EAAiBpF,GACnCmF,EAAInF,GAASY,EAAMoD,KAAK,SAAC3D,GAAD,OAAWA,EAAKzH,IAAM8K,EAAUpL,SACxD6M,EAAInF,GAAO2D,MAAQD,EAAUC,OAHjC,IAAK,IAAI3D,KAASoF,EAAkBC,EAA3BrF,GAMT,OAAOmF,EKtBAD,CAA4BN,EAAe3B,GAUrCqC,CAAeX,GAAWlM,IAAI,SAAC4H,GAC1C,IAAMkE,EAAaI,EAAUnM,OAAOsL,OACjC,SAACpL,GAAD,OACGiM,EAAUJ,WAAWT,OAClB,SAACyB,GAAD,OAAgBA,EAAUtL,SAAWvB,EAAME,IAAM2M,EAAUjN,QAAU+H,EAAKzH,KAC3EuK,OAAS,IAGjB,OAAOrH,OAAO4F,OAAOrB,EAAM,CAAE7H,OAAQ+L,OCK5B1K,eAjCS,SAACC,EAAOC,GAG5B,MAAO,CAEH6G,MAAO8D,GAAS5K,KAMG,SAACE,GAAD,MACvB,CACImG,YAAa,SAACvH,EAAI+K,GAEd3J,ElBxBc,SAACpB,EAAI+K,GAE3B,MAAQ,CAAEhK,KAAM,eAAgBC,QAAS,CAAEhB,GAAIA,EAAI+K,MAAOA,IkBsBzC6B,CAAW5M,EAAI+K,KAE5BzD,YAAY,kBAAIlG,ElBMZ,CAACL,KAAK,gBAAgBC,QAAQ,MkBLlC0G,QAAS,SAACD,GACNrG,ElBvBW,SAACpB,EAAIK,EAAMuB,GAC9B,MAAQ,CAAEb,KAAM,WAAYC,QAAS,CAAEhB,KAAIK,OAAMuB,MAAKC,OADAyI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,KkBuBrC5C,CAAQD,EAAKzH,GAAIyH,EAAKpH,KAAMoH,EAAK7F,MAC1CR,ElBnBA,CAAEL,KAAM,iBAAkBC,QAAS,CAAEtB,OkBmBf+H,EAAKzH,OAE/B6H,WAAY,SAAC7H,GACToB,ElBVA,CAAEL,KAAM,oBAAqBC,QAAS,CAAEtB,OkBUfM,KACzBoB,ElBpBc,SAACpB,GACvB,MAAQ,CAAEe,KAAM,cAAeC,QAAS,CAAEhB,OkBmBzB6H,CAAW7H,KAExB+H,eAAgB,SAAC/H,GACboB,ElBnBkB,SAACpB,GAC3B,MAAQ,CAAEe,KAAM,oBAAqBC,QAAS,CAAEhB,OkBkB/B+H,CAAe/H,OAMrBiB,CAGb4L,GCCaC,GA9CM,CACjB9E,MAAO,CACH,CACIhI,GAAI,EACJK,KAAM,QACNuB,IAAK,EACLC,QAAQ,GAEZ,CACI7B,GAAI,EACJK,KAAM,QACNuB,IAAK,EACLC,QAAQ,GAEZ,CACI7B,GAAI,EACJK,KAAM,QACNuB,IAAK,EACLC,QAAQ,IAGhBwI,WAAY,CACR,CAAErK,GAAI,EAAGN,OAAQ,EAAGqL,MAAO,GAC3B,CAAE/K,GAAI,EAAGN,OAAQ,EAAGqL,MAAO,GAC3B,CAAE/K,GAAI,EAAGN,OAAQ,EAAGqL,MAAO,IAE/B3H,OAAQ,CACJvC,WAAY,KACZC,UAAW,MAEf0K,QAAS,CACLnL,KAAM,KACNwB,OAAO,MAEXjC,OAAQ,CACJ,CAACI,GAAG,EAAEK,KAAK,SAASE,MAAM,WAC1B,CAACP,GAAG,EAAEK,KAAK,SAASE,MAAM,WAC1B,CAACP,GAAG,EAAEK,KAAK,SAASE,MAAM,YAE9BoL,WAAW,CACP,CAAC3L,GAAG,EAAEqB,QAAQ,EAAE3B,OAAO,GACvB,CAACM,GAAG,EAAEqB,QAAQ,EAAE3B,OAAO,KC1B3BqN,yBAAQC,YAAYC,GAAYH,KAgBrBI,oLAXX,OACE/N,EAAAC,EAAAC,cAAC8N,EAAA,EAAD,CAAUJ,MAAOA,IACf5N,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,OAEZvB,EAAAC,EAAAC,cAAC+N,GAAD,eAPOvH,aCLEwH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxO,EAAAC,EAAAC,cAACuO,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2a4d50d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { List, Col, Badge, Row, Popover, Button, Menu, Dropdown } from 'antd';\nimport { Icon } from 'react-fa';\n\nconst LabelsMenu = (props) => {\n    const menu = (\n        <Menu\n            onClick={\n                (e) => {\n                    props.addItemLabel(props.itemId, e.key)\n                }\n            }>\n            {props.labels.map(\n                (label) => (\n                    <Menu.Item key={label.id}>\n                        <Row>\n                            <Col span={8}>\n                                <Icon\n                                    name=\"tag\"\n                                    style={\n                                        {\n                                            \"color\": label.color,                                            \n                                        }\n                                    }\n                                >\n                                </Icon>\n                            </Col>\n                            <Col span={16}>\n                                {label.name}\n                            </Col>\n                        </Row>\n\n                        \n                    </Menu.Item>\n                )\n            )}\n\n\n\n        </Menu>\n    );\n\n    return (<Dropdown overlay={menu}>\n        <a className=\"ant-dropdown-link\" href=\"#\">\n            Add <Icon name=\"angle-down\" />\n        </a>\n    </Dropdown>);\n\n}\nexport default LabelsMenu","export const chageOrder = (id, order) => {\n    \n    return ({ type: \"CHANGE_ORDER\", payload: { id: id, order: order } })\n}\n\nexport const addItem = (id, name, qty, isRead = false) => {\n    return ({ type: \"ADD_ITEM\", payload: { id, name, qty, isRead } })\n}\n\nexport const addItemOrder = (itemId) => {\n    return ({ type: \"ADD_ITEM_ORDER\", payload: { itemId } })\n}\n\nexport const deleteItem = (id) => {\n    return ({ type: \"DELETE_ITEM\", payload: { id } });\n}\n\nexport const markAsReadItem = (id) => {\n    return ({ type: \"MARK_AS_READ_ITEM\", payload: { id } });\n}\n\nexport const deleteItemOrder = (itemId) => {\n    return ({ type: \"DELETE_ITEM_ORDER\", payload: { itemId } });\n}\n\n \n\nexport const changeSortBy = (columnName,direction) => {\n    return ({ type: \"CHANGE_SORT_BY\",payload:{columnName,direction}});\n}\n\nexport const unsetSortBy = () => {\n    return ({type:\"UNSET_SORT_BY\",payload:{}});\n}\n\nexport const setFilter = (filterName,filterValue) => {\n    \n    return ({type:\"SET_FILTER\",payload:{\"filterName\":filterName,\"filterValue\":filterValue}});\n}\nexport const unsetFilter = (filterName,filterValue) => {\n    return ({type:\"UNSET_FILTER\",payload:{\"filterName\":filterName}});\n}\n\nexport const addItemLabel = (itemId,labelId)=>{\n    return ({type:\"ADD_ITEM_LABEL\",payload:{itemId,labelId}});\n}\n","import React, { Component } from 'react';\nimport Menu from './Menu';\nimport { connect } from 'react-redux'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport {addItemLabel } from '../actions';\n\n \n\nconst mapStateToProps = (state, ownProps) => {     \n    return {\n        labels:state.labels,\n\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => (\n    {\n        addItemLabel:(itemId,labelId)=>dispatch(addItemLabel(itemId,labelId))\n    }\n);\n\n \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps    \n)(Menu);","import React, { Component } from 'react';\nimport { List, Col, Badge, Row, Popover, Button, Menu, Dropdown } from 'antd';\nimport { Icon } from 'react-fa'\nimport AddItemLabelMenu from '../AddItemLabelMenu';\nimport styled from 'styled-components';\n\nconst StyledListItem = styled(List.Item)`\n    border: 1px solid #e8e8e8;\n    border-bottom: 1px solid #e8e8e8!important;\n    margin: 20px;\n    background-color:#fff\n`;\n\nconst ShoppingListItem = (props) => {\n\n    // const {name,sum,labels} = props;\n\n    return (\n        <StyledListItem>\n             \n            <Col span={8} >\n                {props.name} -\n            </Col>\n\n            <Col span={4} >\n                {props.qty}\n            </Col>\n\n            <Col span={4}>\n                {props.isRead ? \"isRead\" : \"No\"}\n            </Col>\n\n            <Col span={8}>\n                {props.labels.map(label => (\n                    <div><Icon name=\"tag\" style={{ \"color\": label.color }}></Icon>{label.name}</div>\n                ))}\n                <AddItemLabelMenu itemId={props.id} />\n            </Col>\n\n        </StyledListItem>\n    );\n}\n\nexport default ShoppingListItem;","import React, { Component } from 'react';\nimport { Input } from 'antd';\n\nconst SearchInput = function(props){\n    const {onChange} = props;\n     \n    return (<Input.Search\n        placeholder=\"input search text\"\n        // onSearch={(value)=>onChange(filterName,value)}\n        onSearch={onChange}\n        enterButton\n    />)\n\n}\n\nexport default SearchInput;","import React, { Component } from 'react';\nimport { Col, Badge, Row, Icon, Radio } from 'antd';\nimport SearchInput from './SearchInput';\n\nconst FilterPanel = (props) => {\n    const {setFilter,unsetFilter} = props;\n    return (\n        <Row >\n            <Col  span={4}>\n                <SearchInput filterName='name' onChange={(value) => setFilter('name', value)} />\n            </Col>\n            \n            <Col span={8}>\n                <Radio.Group\n                    defaultValue=\"all\"\n                    buttonStyle=\"solid\"\n                    onChange={(e) => {\n                        \n                        switch(e.target.value){                        \n                            case 'all':\n                                return unsetFilter('isRead');\n                            case 'read':\n                                return setFilter('isRead',true);\n                            case 'not-yet-read':\n                                return setFilter('isRead',false);\n                            default:\n                                return;\n                        }\n                    }}>\n                    <Radio.Button value=\"all\">All</Radio.Button>\n                    <Radio.Button value=\"read\">Read</Radio.Button>\n                    <Radio.Button value=\"not-yet-read\">Not yet read</Radio.Button>\n                </Radio.Group>\n\n            </Col>\n        </Row>\n    );\n}\n\nexport default FilterPanel;","import React, { Component } from 'react';\nimport Panel from './Panel';\nimport { connect } from 'react-redux'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { setFilter,unsetFilter } from '../actions';\n \n\nconst mapStateToProps = (state, ownProps) => {     \n    return {\n        ...state.sortBy,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => (\n    {\n        setFilter:(filterName,filterValue) => {\n            console.log('setFilterMapDis',filterName,filterValue);\n            return (dispatch(setFilter(filterName,filterValue)))\n        },\n        unsetFilter:(filterName)=>dispatch(unsetFilter(filterName))\n    }\n);\n\n \nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n    \n)(Panel);","import React, { Component } from 'react';\nimport { Form, Icon, Input, Button } from 'antd';\n\nconst FormItem = Form.Item;\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\nclass HorizontalLoginForm extends React.Component {\n\n    componentDidMount() {\n        // To disabled submit button at the beginning.\n        this.props.form.validateFields();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                \n                const id=new Date().getTime();\n                this.props.handleSubmit({id,...values});\n            }\n        });\n        \n    }\n\n    render() {\n        const {\n            getFieldDecorator, getFieldsError, getFieldError, isFieldTouched,\n        } = this.props.form;\n\n        // Only show error after a field is touched.\n        const nameError = isFieldTouched('name') && getFieldError('name');\n        const qtyError = isFieldTouched('qty') && getFieldError('qty');\n        return (\n            <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                <FormItem\n                    validateStatus={nameError ? 'error' : ''}\n                    help={nameError || ''}\n                >\n                    {getFieldDecorator('name', {\n                        rules: [{ required: true, message: 'Please input name' }],\n                    })(\n                        <Input   placeholder=\"name\" />\n                    )}\n                </FormItem>\n                <FormItem\n                    validateStatus={qtyError ? 'error' : ''}\n                    help={qtyError || ''}\n                >\n                    {getFieldDecorator('qty', {\n                        rules: [{ required: true, message: 'Please input qty!' }],\n                    })(\n                        <Input   placeholder=\"qty\" />\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        disabled={hasErrors(getFieldsError())}\n                    >\n                        Add\n            </Button>\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nconst WrappedHorizontalLoginForm = Form.create()(HorizontalLoginForm);\n\nexport default WrappedHorizontalLoginForm;","import React, { Component } from 'react';\nimport { Menu } from 'antd';\n\n const ItemMenu = (props) => (\n    <Menu \n        onClick={(e)=>{\n            \n            if (e.key === 'delete') {\n                 props.deleteHandle();\n                 \n            }\n            if(e.key === 'markRead'){\n                 props.markAsReadHandle();\n            }\n        }}\n    >\n        <Menu.Item key=\"markRead\">Mark As Read</Menu.Item>\n        <Menu.Item key=\"delete\">Delete</Menu.Item>\n        \n    </Menu>\n        )\n        export default ItemMenu;","import React, { Component } from 'react';\nimport { Col, Badge, Row } from 'antd';\nimport { Icon } from 'react-fa'\n\nconst SortingPanel = (props) => {\n\n    return (\n        <Row \n            style={{\n                \"margin-top\":\"20px\"\n            }}\n         >\n            <Col span={8} onClick={() => { props.clickHandle('name') }} >\n\n                <b \n                    style={\n                        { \n                            \"padding-right\": \"10px\" \n                        }}\n                >\n                    Name\n                </b>\n                <Icon name=\"sort\" />\n\n            </Col>\n            <Col span={4} onClick={() => props.clickHandle('qty')}>\n                <b \n                    style={\n                        { \n                            \"padding-right\": \"10px\" \n                        }}\n                >\n                    Qty\n                </b>\n                <Icon name=\"sort\" />\n            </Col>\n\n            <Col span={4}>\n                <b>isRead</b>\n            </Col>\n\n            <Col span={8}>\n                <b>Labels</b>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SortingPanel;","import React, { Component } from 'react';\nimport SortingPanel from './Panel';\nimport { connect } from 'react-redux'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { changeSortBy } from '../actions';\n \n\nconst mapStateToProps = (state, ownProps) => {\n    \n    \n    return {\n        ...state.sortBy,\n    }\n}\n\nconst mergeProps = (stateProps,dispatchProps) => {\n    const {currentColumnName,currentDirection}  = stateProps;\n    const {dispatch} = dispatchProps;\n    return {\n        clickHandle: (columnName) =>{\n             \n            if(stateProps.columnName==columnName){\n                 \n                dispatch(changeSortBy(columnName,(stateProps.direction==='ASC')?'DESC':'ASC'));\n            } else {\n                dispatch(changeSortBy(columnName,'ASC'));\n            }            \n        }\n    }\n}\n\n \nexport default connect(\n    mapStateToProps,\n    null,\n    mergeProps\n)(SortingPanel);","import React, { Component } from 'react';\nimport { Row, Button,List,   Col, Popover,Dropdown ,Modal} from 'antd';\n\nimport ShoppingListItem from '../ShoppingListItem';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport FilterPanel from '../FilterPanel';\nimport AddItemForm from './AddItemForm';\nimport ItemMenu from './ItemMenu';\nimport SortingPanel from '../SortingPanel/index';\n\nclass ShoppingList extends React.Component {\n    constructor(props) {\n\n        super(props);\n        const { items } = props;\n        this.state = {\n            items: props.items,\n            filterName: '',\n            addFormVisible: false\n        };\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ items: nextProps.items });\n    }\n\n    onDragEnd = result => {\n        \n        const newOrder = result.destination.index;\n        const id = result.draggableId;\n        this.props.unsetSortBy();\n        this.props.changeOrder(id, newOrder);\n\n    }\n\n\n\n \n    handleAddFormSubmit=(item)=>{\n        this.props.addItem(item);\n        this.setState({addFormVisible:false});\n    }\n\n    confirm( context,onOk) {\n        Modal.confirm({\n          title: null,\n          content: context,\n          okText: 'OK',\n          cancelText: 'CANCEL',\n          onOk:onOk,\n\n        });\n      }\n\n    deleteItem = (itemId)=>{\n        this.confirm(\n            \"Are You sure you want delete item\",\n            ()=>this.props.deleteItem(itemId)\n        );\n    }\n\n    markAsReadItem = (itemId)=> {\n        this.confirm(\n            \"Are You sure you want mark item as read\",\n            ()=>this.props.markAsReadItem(itemId)\n        );\n    }\n\n    render() {\n\n        const items = this.state.items \n        \n        return (\n            <DragDropContext\n                onDragEnd={this.onDragEnd}\n            >\n                <Droppable droppableId=\"droppable-1\" type=\"PERSON\">\n                    {\n                        (provided, snapshot) => {\n                            return (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                >\n                                    <List\n                                        header={\n                                            <div>\n                                                 \n                                                     <FilterPanel/>     \n                                                \n                                                 \n                                                     <SortingPanel/> \n                                                 \n                                                 \n                                            </div>\n                                             \n\n                                        }\n                                        footer={\n                                            <div>\n                                            <Row>\n                                                <Col span={4} offset={4}>\n                                                    <Popover\n                                                        content={\n                                                            <AddItemForm \n                                                                handleSubmit={this.handleAddFormSubmit} \n                                                                handleCancel={()=>this.setState({addFormVisible:false})}\n                                                            />\n                                                            }\n                                                        title=\"Add new Item\"\n                                                        trigger=\"click\"\n                                                        visible={this.state.addFormVisible}\n                                                         \n                                                    >\n                                                        <Button \n                                                            block \n                                                            onClick={()=>this.setState({addFormVisible:true})}\n                                                            disabled={this.state.addFormVisible}\n                                                        >\n                                                            Add\n                                                        </Button>\n                                                    </Popover>\n                                                </Col>\n                                            </Row>\n                                            </div>\n                                        }\n                                        bordered={true}\n                                        dataSource={items}\n                                        renderItem={(item, index) => {\n\n                                            return (\n                                                \n                                                <Draggable  draggableId={item.id} index={index}>\n                                                    {\n                                                        (provided, snapshot) => (\n                                                            <Dropdown                                                                 \n                                                                overlay={\n                                                                    <ItemMenu\n                                                                        deleteHandle ={()=>this.deleteItem(item.id)} \n                                                                        markAsReadHandle ={()=>this.markAsReadItem(item.id)} \n                                                                    />\n                                                                } \n                                                                trigger={['contextMenu']}\n                                                            > \n                                                            <div \n                                                                \n                                                                ref={provided.innerRef}\n                                                                {...provided.draggableProps}\n                                                                {...provided.dragHandleProps}\n                                                            >\n                                                                \n                                                                    <ShoppingListItem\n                                                                        key={item.id}\n                                                                        {...item}\n                                                                    />\n                                                               \n                                                            </div>\n                                                            </Dropdown>\n                                                        )\n                                                    }\n\n                                                </Draggable> \n                                            )\n                                        }\n                                        }\n                                    >\n                                        {provided.placeholder}\n                                    </List>\n                                </div>\n                            )\n                        }\n                    }\n                </Droppable>\n            </DragDropContext>\n        )\n    }\n\n}\n\n\nexport default ShoppingList;","\n\n\nconst itemOrders = (state = [], action) => {\n\n    switch (action.type) {\n        case 'ADD_ITEM_ORDER':\n            const maxOrder = Math.max.apply(Math, state.map(function (itemOrder) { return itemOrder.order; }));\n            return [...state, { itemId: action.payload.itemId, order: maxOrder + 1 }];\n        case 'DELETE_ITEM_ORDER':\n            return state.filter((itemOrder) => (itemOrder.itemId !== action.payload.itemId));\n        case 'CHANGE_ORDER':\n            const oldOrder = state.find((itemOrder) => (itemOrder.itemId === action.payload.id)).order;\n            const newOrder = action.payload.order;\n            if (newOrder < oldOrder) {\n                const newState = state.map(function (itemOrder) {\n                    if (itemOrder.order >= newOrder && itemOrder.order < oldOrder) {\n                        itemOrder.order = itemOrder.order + 1\n                    }\n                    return itemOrder;\n                });\n                newState.find((itemOrder) => itemOrder.itemId == action.payload.id).order = newOrder;\n                return newState;\n            } else {\n                const newState = state.map(function (itemOrder) {\n                    if (itemOrder.order <= newOrder && itemOrder.order > oldOrder) {\n                        itemOrder.order = itemOrder.order - 1\n                    }\n                    return itemOrder;\n                });\n                newState.find((itemOrder) => itemOrder.itemId == action.payload.id).order = newOrder;\n                return newState;\n            }\n            break;\n        default:\n            return state;\n    }\n}\nexport default itemOrders;","const items = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ITEM':\n            return [...state, action.payload];\n        case 'DELETE_ITEM':\n            return state.filter((item) => (item.id !== action.payload.id));\n        case 'MARK_AS_READ_ITEM':\n            return state.map(function (item) {\n                if (item.id == action.payload.id) {\n                    item.isRead = true;\n                }\n                return item;\n            });\n        default:\n            return state;\n    }\n\n    return state;\n}\n\nexport default items;\n\nexport const getDndSortedItems = (items, itemOrders) => {\n\n    const res = [];\n    const sortedItemOrders = itemOrders.slice().sort((a, b) => {\n        if (a.order < b.order) {\n            return -1;\n        }\n        if (a.order > b.order) {\n            return 1;\n        }\n        return 0;\n    });\n\n    for (let index in sortedItemOrders) {\n        const itemOrder = sortedItemOrders[index];\n        res[index] = items.find((item) => (item.id == itemOrder.itemId));\n        res[index].order = itemOrder.order;\n    }\n\n    return res;\n}\n\nexport const filterItems = (items, filters) => {\n\n    if (filters.hasOwnProperty('name') && filters.name !== null) {\n        items = items.slice().filter(item => item.name.indexOf(filters.name) > -1)\n    }\n    \n    if (filters.hasOwnProperty('isRead') && filters.isRead !== null) {\n        items = items.slice().filter(item => item.isRead === filters.isRead);\n    }\n\n    return items;\n}\n\nexport const getColumnSortedItems = (items, columnName, direction) => {\n\n    const sorted = items.slice().sort((a, b) => {\n        if (a[columnName] === b[columnName]) {\n            return 0;\n        }\n\n        if (a[columnName] < b[columnName]) {\n            return (direction === 'ASC') ? -1 : 1;\n        }\n        if (a[columnName] > b[columnName]) {\n            return (direction === 'ASC') ? 1 : -1;\n        }\n\n    })\n\n    return sorted;\n}\n","const SortBy = (state = [], action) => {\n\n    switch (action.type) {\n        case 'CHANGE_SORT_BY':\n            return Object.assign({}, state, { columnName: action.payload.columnName, direction: action.payload.direction });\n        case 'UNSET_SORT_BY':\n            return Object.assign({}, state, { columnName: null, direction: null });\n        default:\n            return state;\n    }\n}\nexport default SortBy;","\nconst filters = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_FILTER':\n            const { filterName, filterValue } = action.payload;\n            return Object.assign({}, state, { [filterName]: filterValue });\n        case 'UNSET_FILTER':            \n            return Object.assign({}, state, { [action.payload.filterName]: null });\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default filters;","const labels = (state = [], action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\n\nexport default labels;","const itemLabels = (state = [], action) => {\n    switch (action.type) {\n        case 'ADD_ITEM_LABEL':\n            return [...state,\n            { id: new Date().getTime(), ...action.payload }\n            ];\n        default:\n            return state;\n    }\n}\n\nexport default itemLabels;","\nimport { combineReducers } from 'redux'\nimport itemOrders from './itemOrders';\nimport items, * as fromItems from './items';\nimport sortBy from './sortBy';\nimport filters from './filters';\nimport labels from './labels';\nimport itemLabels from './itemsLabels';\n\nexport default combineReducers({\n   items, itemOrders, sortBy, filters, labels, itemLabels\n});\n\nexport const getSortedItems = (state) => {\n   const filteredItems = fromItems.filterItems(state.items, state.filters);\n   if (state.sortBy.columnName !== null) {\n      return fromItems.getColumnSortedItems(filteredItems, state.sortBy.columnName, state.sortBy.direction);\n   }\n   const itemOrders = state.itemOrders.filter((itemOrder) => filteredItems.find((item) => item.id === itemOrder.itemId));\n   return (fromItems.getDndSortedItems(filteredItems, itemOrders));\n}\n\n\n\n\nexport const getItems = (state) => {\n\n   const mainState = state;\n\n   const items = getSortedItems(mainState).map((item) => {\n      const itemLabels = mainState.labels.filter(\n         (label) => (\n            mainState.itemLabels.filter(\n               (itemLabel) => (itemLabel.labelId == label.id && itemLabel.itemId == item.id)\n            ).length > 0\n         )\n      );\n      return Object.assign(item, { labels: itemLabels });\n   });\n   return items;\n}","import React, { Component } from 'react';\nimport ShoppingListComponent from './List';\nimport { connect } from 'react-redux'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\nimport { getSortedItems,getItems } from '../reducers';\nimport { chageOrder, addItem, addItemOrder,deleteItem,deleteItemOrder, markAsReadItem,unset, unsetSortBy } from '../actions';\n// export default ShoppingListComponent;\n\n\nconst mapStateToProps = (state, ownProps) => {\n    \n    \n    return {\n        \n        items: getItems(state)\n    }\n}\n\n \n\nconst mapDispatchToProps = (dispatch) => (\n    {\n        changeOrder: (id, order) => {\n            \n            dispatch(chageOrder(id, order))\n        },\n        unsetSortBy:()=>dispatch(unsetSortBy()),\n        addItem: (item) => {\n            dispatch(addItem(item.id, item.name, item.qty));\n            dispatch(addItemOrder(item.id));\n        },\n        deleteItem: (id) => {\n            dispatch(deleteItemOrder(id));\n            dispatch(deleteItem(id))\n        },\n        markAsReadItem: (id) => {\n            dispatch(markAsReadItem(id));\n        },\n\n    }\n)\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ShoppingListComponent);","const initialState = {\n    items: [\n        {\n            id: 1,\n            name: 'Item1',\n            qty: 1,\n            isRead: false\n        },\n        {\n            id: 2,\n            name: 'Item2',\n            qty: 2,\n            isRead: false\n        },\n        {\n            id: 3,\n            name: 'Item3',\n            qty: 3,\n            isRead: false\n        },\n    ],\n    itemOrders: [\n        { id: 1, itemId: 1, order: 1 },\n        { id: 2, itemId: 2, order: 0 },\n        { id: 3, itemId: 3, order: 2 },\n    ],\n    sortBy: {\n        columnName: null,\n        direction: null\n    },\n    filters: {\n        name: null,\n        isRead:null,        \n    },\n    labels: [\n        {id:1,name:\"Label1\",color:\"#4286f4\"},\n        {id:2,name:\"Label2\",color:\"#f45641\"},\n        {id:3,name:\"Label3\",color:\"#41f467\"}\n    ],\n    itemLabels:[\n        {id:1,labelId:1,itemId:1},\n        {id:2,labelId:2,itemId:1}\n    ]\n\n}\n\nexport default initialState;","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\n\n\nimport ShoppingList from './ShoppingList';\n\nimport initialState from './store/initialState';\nimport rootReducer from './reducers';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nlet store = createStore(rootReducer,initialState);\n\nclass App extends Component {\n  render() {\n     \n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n            \n           <ShoppingList />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}